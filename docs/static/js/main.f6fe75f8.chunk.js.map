{"version":3,"sources":["Calculator2.js","Calculator.js","Navbar.js","AppRouter.js","MainScreen.js","index.js"],"names":["Calculator2","_useState","useState","_useState2","Object","C_Users_Riandry_PC_Documents_Development_proyects_react_projects_React_projects_for_begginners_CalculatorsReactJS_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","calc","setCalc","_useState3","_useState4","result","setResult","ops","updateCalc","value","includes","slice","eval","toString","createDigits","digits","_loop","i","push","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","onClick","key","calculate","deleteLast","className","AutoScalingText","state","scale","this","node","actualScale","parentNode","offsetWidth","setState","_this2","react_default","style","transform","concat","ref","props","children","React","Component","CalculatorDisplay","_this$props","objectWithoutProperties","language","navigator","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","match","test","assign","Calculator_AutoScalingText","CalculatorKey","_this$props2","onPress","react_point","onPoint","CalculatorOperations","/","prevValue","nextValue","*","+","-","=","Calculator","displayValue","operator","waitingForOperand","handleKeyDown","event","preventDefault","_this3","inputDigit","parseInt","performOperation","inputDot","inputPercent","clearLastChar","clearDisplay","clearAll","substring","length","newValue","String","fixedDigits","replace","toFixed","digit","_this$state","nextOperator","_this$state2","inputValue","currentValue","document","addEventListener","removeEventListener","_this4","clearText","Fragment","Calculator_CalculatorDisplay","Calculator_CalculatorKey","toggleSign","Navbar","id","react_router_dom","aria-current","to","AppRouter","Navbar_Navbar","react_router","path","element","src_Calculator","MainScreen","AppRouter_AppRouter","ReactDOM","render","StrictMode","src_MainScreen","getElementById"],"mappings":"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","file":"static/js/main.f6fe75f8.chunk.js","sourcesContent":["// Calculator React Using functional Component\r\nimport React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport \"./CSS/calculator2.css\";\r\n\r\nfunction Calculator2() {\r\n  const [calc, setCalc] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  const ops = [\"/\", \"*\", \"+\", \"-\", \".\"];\r\n\r\n  const updateCalc = (value) => {\r\n    if (\r\n      (ops.includes(value) && calc === \"\") ||\r\n      (ops.includes(value) && ops.includes(calc.slice(-1)))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setCalc(calc + value);\r\n    if (!ops.includes(value)) {\r\n      setResult(eval(calc + value).toString());\r\n    }\r\n  };\r\n\r\n  const createDigits = () => {\r\n    const digits = [];\r\n    for (let i = 1; i < 10; i++) {\r\n      digits.push(\r\n        <button onClick={() => updateCalc(i.toString())} key={i}>\r\n          {i}\r\n        </button>\r\n      );\r\n    }\r\n    return digits;\r\n  };\r\n\r\n  const calculate = () => {\r\n    setCalc(eval(calc).toString());\r\n  };\r\n\r\n  const deleteLast = () => {\r\n    if (calc === \"\") {\r\n      return;\r\n    }\r\n    const value = calc.slice(0, -1);\r\n    setCalc(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"title-h1\">\r\n        <h1>Calculator App (Using classes)</h1>\r\n      </div>\r\n      <div className=\"calculator\">\r\n        <div className=\"display\">\r\n          {result ? <span>{result}</span> : \"\"}&nbsp;\r\n          {calc || \"0\"}\r\n        </div>\r\n        <div className=\"operators\">\r\n          <button onClick={() => updateCalc(\"/\")}>/</button>\r\n          <button onClick={() => updateCalc(\"*\")}>*</button>\r\n          <button onClick={() => updateCalc(\"+\")}>+</button>\r\n          <button onClick={() => updateCalc(\"-\")}>-</button>\r\n\r\n          <button onClick={deleteLast}>DEL</button>\r\n        </div>\r\n        <div className=\"digits\">\r\n          {createDigits()}\r\n          <button onClick={() => updateCalc(\"0\")}>0</button>\r\n          <button onClick={() => updateCalc(\".\")}>.</button>\r\n          <button onClick={calculate}>=</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator2;\r\n","// Calculator React Using classes\r\nimport React from \"react\";\r\nimport PointTarget from \"react-point\";\r\n\r\nimport \"./index.css\";\r\nimport \"./CSS/calculator.css\";\r\n\r\nclass AutoScalingText extends React.Component {\r\n  state = {\r\n    scale: 1,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const { scale } = this.state;\r\n\r\n    const node = this.node;\r\n    const parentNode = node.parentNode;\r\n\r\n    const availableWidth = parentNode.offsetWidth;\r\n    const actualWidth = node.offsetWidth;\r\n    const actualScale = availableWidth / actualWidth;\r\n\r\n    if (scale === actualScale) return;\r\n\r\n    if (actualScale < 1) {\r\n      this.setState({ scale: actualScale });\r\n    } else if (scale < 1) {\r\n      this.setState({ scale: 1 });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { scale } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"auto-scaling-text\"\r\n        style={{ transform: `scale(${scale},${scale})` }}\r\n        ref={(node) => (this.node = node)}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CalculatorDisplay extends React.Component {\r\n  render() {\r\n    const { value, ...props } = this.props;\r\n\r\n    const language = navigator.language || \"en-US\";\r\n    let formattedValue = parseFloat(value).toLocaleString(language, {\r\n      useGrouping: true,\r\n      maximumFractionDigits: 6,\r\n    });\r\n\r\n    // Add back missing .0 in e.g. 12.0\r\n    const match = value.match(/\\.\\d*?(0*)$/);\r\n\r\n    if (match) formattedValue += /[1-9]/.test(match[0]) ? match[1] : match[0];\r\n\r\n    return (\r\n      <div {...props} className=\"calculator-display\">\r\n        <AutoScalingText>{formattedValue}</AutoScalingText>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CalculatorKey extends React.Component {\r\n  render() {\r\n    const { onPress, className, ...props } = this.props;\r\n\r\n    return (\r\n      <PointTarget onPoint={onPress}>\r\n        <button className={`calculator-key ${className}`} {...props} />\r\n      </PointTarget>\r\n    );\r\n  }\r\n}\r\n\r\nconst CalculatorOperations = {\r\n  \"/\": (prevValue, nextValue) => prevValue / nextValue,\r\n  \"*\": (prevValue, nextValue) => prevValue * nextValue,\r\n  \"+\": (prevValue, nextValue) => prevValue + nextValue,\r\n  \"-\": (prevValue, nextValue) => prevValue - nextValue,\r\n  \"=\": (prevValue, nextValue) => nextValue,\r\n};\r\n\r\nclass Calculator extends React.Component {\r\n  state = {\r\n    value: null,\r\n    displayValue: \"0\",\r\n    operator: null,\r\n    waitingForOperand: false,\r\n  };\r\n\r\n  clearAll() {\r\n    this.setState({\r\n      value: null,\r\n      displayValue: \"0\",\r\n      operator: null,\r\n      waitingForOperand: false,\r\n    });\r\n  }\r\n\r\n  clearDisplay() {\r\n    this.setState({\r\n      displayValue: \"0\",\r\n    });\r\n  }\r\n\r\n  clearLastChar() {\r\n    const { displayValue } = this.state;\r\n\r\n    this.setState({\r\n      displayValue: displayValue.substring(0, displayValue.length - 1) || \"0\",\r\n    });\r\n  }\r\n\r\n  toggleSign() {\r\n    const { displayValue } = this.state;\r\n    const newValue = parseFloat(displayValue) * -1;\r\n\r\n    this.setState({\r\n      displayValue: String(newValue),\r\n    });\r\n  }\r\n\r\n  inputPercent() {\r\n    const { displayValue } = this.state;\r\n    const currentValue = parseFloat(displayValue);\r\n\r\n    if (currentValue === 0) return;\r\n\r\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, \"\");\r\n    const newValue = parseFloat(displayValue) / 100;\r\n\r\n    this.setState({\r\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2)),\r\n    });\r\n  }\r\n\r\n  inputDot() {\r\n    const { displayValue } = this.state;\r\n\r\n    if (!/\\./.test(displayValue)) {\r\n      this.setState({\r\n        displayValue: displayValue + \".\",\r\n        waitingForOperand: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  inputDigit(digit) {\r\n    const { displayValue, waitingForOperand } = this.state;\r\n\r\n    if (waitingForOperand) {\r\n      this.setState({\r\n        displayValue: String(digit),\r\n        waitingForOperand: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        displayValue:\r\n          displayValue === \"0\" ? String(digit) : displayValue + digit,\r\n      });\r\n    }\r\n  }\r\n\r\n  performOperation(nextOperator) {\r\n    const { value, displayValue, operator } = this.state;\r\n    const inputValue = parseFloat(displayValue);\r\n\r\n    if (value == null) {\r\n      this.setState({\r\n        value: inputValue,\r\n      });\r\n    } else if (operator) {\r\n      const currentValue = value || 0;\r\n      const newValue = CalculatorOperations[operator](currentValue, inputValue);\r\n\r\n      this.setState({\r\n        value: newValue,\r\n        displayValue: String(newValue),\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      waitingForOperand: true,\r\n      operator: nextOperator,\r\n    });\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    let { key } = event;\r\n\r\n    if (key === \"Enter\") key = \"=\";\r\n\r\n    if (/\\d/.test(key)) {\r\n      event.preventDefault();\r\n      this.inputDigit(parseInt(key, 10));\r\n    } else if (key in CalculatorOperations) {\r\n      event.preventDefault();\r\n      this.performOperation(key);\r\n    } else if (key === \".\") {\r\n      event.preventDefault();\r\n      this.inputDot();\r\n    } else if (key === \"%\") {\r\n      event.preventDefault();\r\n      this.inputPercent();\r\n    } else if (key === \"Backspace\") {\r\n      event.preventDefault();\r\n      this.clearLastChar();\r\n    } else if (key === \"Clear\") {\r\n      event.preventDefault();\r\n\r\n      if (this.state.displayValue !== \"0\") {\r\n        this.clearDisplay();\r\n      } else {\r\n        this.clearAll();\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    const { displayValue } = this.state;\r\n\r\n    const clearDisplay = displayValue !== \"0\";\r\n    const clearText = clearDisplay ? \"C\" : \"AC\";\r\n\r\n    return (\r\n      <>\r\n        <div className=\"title-h1\">\r\n          <h1>Calculator App (Using classes)</h1>\r\n        </div>\r\n        <div className=\"calculator\">\r\n          <CalculatorDisplay value={displayValue} />\r\n          <div className=\"calculator-keypad\">\r\n            <div className=\"input-keys\">\r\n              <div className=\"function-keys\">\r\n                <CalculatorKey\r\n                  className=\"key-clear\"\r\n                  onPress={() =>\r\n                    clearDisplay ? this.clearDisplay() : this.clearAll()\r\n                  }\r\n                >\r\n                  {clearText}\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-sign\"\r\n                  onPress={() => this.toggleSign()}\r\n                >\r\n                  ±\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-percent\"\r\n                  onPress={() => this.inputPercent()}\r\n                >\r\n                  %\r\n                </CalculatorKey>\r\n              </div>\r\n              <div className=\"digit-keys\">\r\n                <CalculatorKey\r\n                  className=\"key-0\"\r\n                  onPress={() => this.inputDigit(0)}\r\n                >\r\n                  0\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-dot\"\r\n                  onPress={() => this.inputDot()}\r\n                >\r\n                  ●\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-1\"\r\n                  onPress={() => this.inputDigit(1)}\r\n                >\r\n                  1\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-2\"\r\n                  onPress={() => this.inputDigit(2)}\r\n                >\r\n                  2\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-3\"\r\n                  onPress={() => this.inputDigit(3)}\r\n                >\r\n                  3\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-4\"\r\n                  onPress={() => this.inputDigit(4)}\r\n                >\r\n                  4\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-5\"\r\n                  onPress={() => this.inputDigit(5)}\r\n                >\r\n                  5\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-6\"\r\n                  onPress={() => this.inputDigit(6)}\r\n                >\r\n                  6\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-7\"\r\n                  onPress={() => this.inputDigit(7)}\r\n                >\r\n                  7\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-8\"\r\n                  onPress={() => this.inputDigit(8)}\r\n                >\r\n                  8\r\n                </CalculatorKey>\r\n                <CalculatorKey\r\n                  className=\"key-9\"\r\n                  onPress={() => this.inputDigit(9)}\r\n                >\r\n                  9\r\n                </CalculatorKey>\r\n              </div>\r\n            </div>\r\n            <div className=\"operator-keys\">\r\n              <CalculatorKey\r\n                className=\"key-divide\"\r\n                onPress={() => this.performOperation(\"/\")}\r\n              >\r\n                ÷\r\n              </CalculatorKey>\r\n              <CalculatorKey\r\n                className=\"key-multiply\"\r\n                onPress={() => this.performOperation(\"*\")}\r\n              >\r\n                ×\r\n              </CalculatorKey>\r\n              <CalculatorKey\r\n                className=\"key-subtract\"\r\n                onPress={() => this.performOperation(\"-\")}\r\n              >\r\n                −\r\n              </CalculatorKey>\r\n              <CalculatorKey\r\n                className=\"key-add\"\r\n                onPress={() => this.performOperation(\"+\")}\r\n              >\r\n                +\r\n              </CalculatorKey>\r\n              <CalculatorKey\r\n                className=\"key-equals\"\r\n                onPress={() => this.performOperation(\"=\")}\r\n              >\r\n                =\r\n              </CalculatorKey>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Calculator;\r\n// ReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./CSS/nav-bar.css\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            <div className=\"navbar-nav\">\r\n              <NavLink\r\n                className=\"nav-link active anim-bottom-blue to-center \"\r\n                aria-current=\"page\"\r\n                to=\"/\"\r\n              >\r\n                Calculator-1\r\n              </NavLink>\r\n              <NavLink\r\n                className=\"nav-link  anim-bottom-red to-center \"\r\n                to=\"/Calculator2\"\r\n              >\r\n                Calculator-2\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Routes, Route, Navigate, HashRouter } from \"react-router-dom\";\r\n\r\nimport Calculator from \"./Calculator\";\r\nimport Calculator2 from \"./Calculator2\";\r\n\r\nimport { Navbar } from \"./Navbar\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <HashRouter>\r\n      <div>\r\n        <Navbar />\r\n\r\n        <div className=\"container\">\r\n          <Routes>\r\n            <Route path=\"/Calculator2\" element={<Calculator2 />} />\r\n            <Route path=\"/\" element={<Calculator />} />\r\n            <Route element={<Navigate replace to=\"/\" />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AppRouter } from \"./AppRouter\";\r\n\r\nconst MainScreen = () => {\r\n  return (\r\n    <>\r\n      <AppRouter />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport MainScreen from \"./MainScreen\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainScreen />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}